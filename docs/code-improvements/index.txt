3:I[6601,[],""]
5:I[7078,[],""]
6:I[7065,["558","static/chunks/558-671780cd7fdea0cf.js","998","static/chunks/app/docs/layout-a14e5073c8ff962f.js"],""]
7:I[7306,["558","static/chunks/558-671780cd7fdea0cf.js","998","static/chunks/app/docs/layout-a14e5073c8ff962f.js"],""]
8:I[4561,["558","static/chunks/558-671780cd7fdea0cf.js","160","static/chunks/app/not-found-174254f1113620b0.js"],""]
4:["slug","code-improvements","c"]
0:["ZZutAbQGoS9ZHc25loZRL",[[["",{"children":["docs",{"children":[["slug","code-improvements","c"],{"children":["__PAGE__?{\"slug\":[\"code-improvements\"]}",{}]}]}]},"$undefined","$undefined",true],["",{"children":["docs",{"children":[["slug","code-improvements","c"],{"children":["__PAGE__",{},["$L1","$L2",null]]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","docs","children","$4","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}]]},[null,[["$","$L6",null,{}],["$","div",null,{"className":"container mx-auto px-4 py-8 flex","children":[["$","$L7",null,{}],["$","div",null,{"className":"flex-1 min-w-0","children":["$","div",null,{"className":"markdown-content","children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","docs","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}]}]}]]}]],null]]},[null,["$","html",null,{"lang":"ko","children":["$","body",null,{"children":["$","main",null,{"className":"container mx-auto px-4 py-8","children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","$L6",null,{}],["$","div",null,{"className":"container mx-auto px-4 py-16 text-center","children":[["$","h1",null,{"className":"text-5xl font-bold mb-6","children":"404"}],["$","p",null,{"className":"text-xl mb-8","children":"페이지를 찾을 수 없습니다."}],["$","$L8",null,{"href":"/","className":"bg-blue-600 text-white px-6 py-3 rounded-lg font-medium hover:bg-blue-700 transition-colors","children":"홈으로 돌아가기"}]]}]],"notFoundStyles":[],"styles":null}]}]}]}],null]],[[["$","link","0",{"rel":"stylesheet","href":"/robota/_next/static/css/825b8367eaa548fa.css","precedence":"next","crossOrigin":""}]],"$L9"]]]]
2:["$","article",null,{"className":"markdown-content","children":[false,[["$","h1",null,{"id":"코드-개선사항","children":["$","a",null,{"href":"#코드-개선사항","children":"코드 개선사항"}]}],"\n",["$","p",null,{"children":"Robota 라이브러리는 지속적인 개선을 통해 코드 품질과 개발자 경험을 향상시키고 있습니다. 이 문서에서는 최근 리팩토링 및 코드 개선 작업에 대한 상세 내용을 제공합니다."}],"\n",["$","h2",null,{"id":"구조적-개선사항","children":["$","a",null,{"href":"#구조적-개선사항","children":"구조적 개선사항"}]}],"\n",["$","h3",null,{"id":"모듈화-및-분리","children":["$","a",null,{"href":"#모듈화-및-분리","children":"모듈화 및 분리"}]}],"\n",["$","p",null,{"children":"코드베이스는 다음과 같이 논리적으로 분리되어 있습니다:"}],"\n",["$","pre",null,{"children":["$","code",null,{"children":"packages/\n├── core/               # 핵심 기능\n│   ├── robota.ts       # 메인 클래스 \n│   ├── memory.ts       # 메모리 관리\n│   ├── types.ts        # 타입 정의\n│   └── ...\n├── openai/             # OpenAI 통합\n├── anthropic/          # Anthropic 통합\n├── tools/              # 도구 시스템\n└── ...\n"}]}],"\n",["$","p",null,{"children":"이러한 모듈화는 다음과 같은 이점을 제공합니다:"}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":[["$","strong",null,{"children":"코드 재사용성"}],": 공통 기능이 적절히 분리되어 중복 코드가 감소했습니다."]}],"\n",["$","li",null,{"children":[["$","strong",null,{"children":"유지보수성"}],": 한 모듈의 변경이 다른 모듈에 미치는 영향이 최소화되었습니다."]}],"\n",["$","li",null,{"children":[["$","strong",null,{"children":"테스트 용이성"}],": 독립적인 모듈은 단위 테스트가 용이합니다."]}],"\n",["$","li",null,{"children":[["$","strong",null,{"children":"번들 크기 최적화"}],": 사용자는 필요한 모듈만 가져와서 번들 크기를 최적화할 수 있습니다."]}],"\n"]}],"\n",["$","h3",null,{"id":"인터페이스-개선","children":["$","a",null,{"href":"#인터페이스-개선","children":"인터페이스 개선"}]}],"\n",["$","p",null,{"children":"핵심 인터페이스들이 다음과 같이 개선되었습니다:"}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":[["$","strong",null,{"children":"ModelContextProtocol"}],": AI 모델과의 통신을 위한 표준화된, 확장 가능한 인터페이스 제공"]}],"\n",["$","li",null,{"children":[["$","strong",null,{"children":"Memory"}],": 대화 기록 관리를 위한 명확한 계약 정의"]}],"\n",["$","li",null,{"children":[["$","strong",null,{"children":"Tool"}],": 도구 정의 및 실행을 위한 확장 가능한 인터페이스"]}],"\n"]}],"\n",["$","h2",null,{"id":"타입-시스템-개선","children":["$","a",null,{"href":"#타입-시스템-개선","children":"타입 시스템 개선"}]}],"\n",["$","h3",null,{"id":"제네릭-타입-도입","children":["$","a",null,{"href":"#제네릭-타입-도입","children":"제네릭 타입 도입"}]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-typescript","children":"// 이전:\ninterface Tool {\n  name: string;\n  description?: string;\n  execute: (...args: any[]) => Promise<any>;\n}\n\n// 개선:\ninterface Tool<TInput = any, TOutput = any> {\n  name: string;\n  description?: string;\n  parameters?: ToolParameter[];\n  execute: (input: TInput) => Promise<ToolResult<TOutput>>;\n}\n"}]}],"\n",["$","h3",null,{"id":"명시적-타입-검사-추가","children":["$","a",null,{"href":"#명시적-타입-검사-추가","children":"명시적 타입 검사 추가"}]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-typescript","children":"// 함수 매개변수 유효성 검사\nregisterFunction(schema: FunctionSchema, fn: Function): void {\n  if (!schema || !schema.name) {\n    throw new Error('유효한 함수 스키마가 필요합니다.');\n  }\n  if (typeof fn !== 'function') {\n    throw new Error('두 번째 인자는 함수여야 합니다.');\n  }\n  \n  // 구현...\n}\n"}]}],"\n",["$","h2",null,{"id":"코드-가독성-개선","children":["$","a",null,{"href":"#코드-가독성-개선","children":"코드 가독성 개선"}]}],"\n",["$","h3",null,{"id":"주석-및-문서화","children":["$","a",null,{"href":"#주석-및-문서화","children":"주석 및 문서화"}]}],"\n",["$","p",null,{"children":"모든 주요 클래스, 메서드, 및 프로퍼티에 JSDoc 주석을 추가하였습니다:"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-typescript","children":"/**\n * 특정 위치의 날씨 정보를 가져오는 도구\n * \n * @example\n * ```ts\n * const weatherTool = createTool({\n *   name: 'getWeather',\n *   description: '특정 위치의 날씨를 조회합니다',\n *   // ... 코드 생략\n * });\n * ```\n */\n"}]}],"\n",["$","h3",null,{"id":"일관된-메서드-그룹화","children":["$","a",null,{"href":"#일관된-메서드-그룹화","children":"일관된 메서드 그룹화"}]}],"\n",["$","p",null,{"children":"관련 메서드를 논리적 그룹으로 분류하여 코드 구조를 명확하게 했습니다:"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-typescript","children":"class Robota {\n  // 시스템 메시지 관리\n  setSystemPrompt() { /* ... */ }\n  setSystemMessages() { /* ... */ }\n  addSystemMessage() { /* ... */ }\n  \n  // 함수 호출 관리\n  setFunctionCallMode() { /* ... */ }\n  configureFunctionCall() { /* ... */ }\n  registerFunction() { /* ... */ }\n  \n  // 실행 메서드\n  run() { /* ... */ }\n  chat() { /* ... */ }\n  \n  // 내부 헬퍼 메서드\n  private prepareContext() { /* ... */ }\n  private handleFunctionCall() { /* ... */ }\n}\n"}]}],"\n",["$","h2",null,{"id":"에러-처리-개선","children":["$","a",null,{"href":"#에러-처리-개선","children":"에러 처리 개선"}]}],"\n",["$","p",null,{"children":"에러 처리가 다양한 상황에서 더 구체적이고 유용한 피드백을 제공하도록 개선되었습니다:"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-typescript","children":"async handleFunctionCall(response, context, options): Promise<string> {\n  if (!response.functionCall || !response.functionCall.name) {\n    throw new Error('함수 호출 정보가 누락되었습니다.');\n  }\n\n  const functionName = response.functionCall.name;\n  const fn = this.functions[functionName];\n\n  if (!fn) {\n    throw new Error(`함수 '${functionName}'이(가) 등록되지 않았습니다.`);\n  }\n  \n  try {\n    // 함수 실행...\n  } catch (error) {\n    console.error(`함수 '${functionName}' 실행 중 오류 발생:`, error);\n    throw error;\n  }\n}\n"}]}],"\n",["$","h2",null,{"id":"테스트-개선","children":["$","a",null,{"href":"#테스트-개선","children":"테스트 개선"}]}],"\n",["$","h3",null,{"id":"테스트-위치-및-구조","children":["$","a",null,{"href":"#테스트-위치-및-구조","children":"테스트 위치 및 구조"}]}],"\n",["$","p",null,{"children":"테스트 파일은 해당 구현 파일과 함께 배치하여 관리가 용이하도록 하였습니다:"}],"\n",["$","pre",null,{"children":["$","code",null,{"children":"packages/core/src/\n  ├── memory.ts\n  ├── memory.test.ts  // memory.ts에 대한 테스트\n  ├── robota.ts\n  └── robota.test.ts  // robota.ts에 대한 테스트\n"}]}],"\n",["$","h3",null,{"id":"테스트-범위-확대","children":["$","a",null,{"href":"#테스트-범위-확대","children":"테스트 범위 확대"}]}],"\n",["$","p",null,{"children":"다음 영역에서 테스트 커버리지가 향상되었습니다:"}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":[["$","strong",null,{"children":"에지 케이스"}],": 비정상적인 입력과 경계 조건에 대한 테스트"]}],"\n",["$","li",null,{"children":[["$","strong",null,{"children":"오류 상황"}],": 예외 발생 시 올바르게 처리되는지 확인"]}],"\n",["$","li",null,{"children":[["$","strong",null,{"children":"통합 테스트"}],": 여러 컴포넌트가 함께 작동하는 시나리오 테스트"]}],"\n"]}],"\n",["$","h2",null,{"id":"api-디자인-개선","children":["$","a",null,{"href":"#api-디자인-개선","children":"API 디자인 개선"}]}],"\n",["$","h3",null,{"id":"일관된-명명-규칙","children":["$","a",null,{"href":"#일관된-명명-규칙","children":"일관된 명명 규칙"}]}],"\n",["$","p",null,{"children":"모든 API는 일관된 명명 규칙을 따릅니다:"}],"\n",["$","ul",null,{"children":["\n",["$","li",null,{"children":["클래스: PascalCase (예: ",["$","code",null,{"children":"OpenAIProvider"}],")"]}],"\n",["$","li",null,{"children":["메서드: camelCase (예: ",["$","code",null,{"children":"registerFunction"}],", ",["$","code",null,{"children":"setSystemPrompt"}],")"]}],"\n",["$","li",null,{"children":["상수: UPPER_SNAKE_CASE (예: ",["$","code",null,{"children":"DEFAULT_TIMEOUT"}],", ",["$","code",null,{"children":"MAX_TOKENS"}],")"]}],"\n",["$","li",null,{"children":["타입/인터페이스: PascalCase (예: ",["$","code",null,{"children":"ToolResult"}],", ",["$","code",null,{"children":"FunctionSchema"}],")"]}],"\n"]}],"\n",["$","h3",null,{"id":"메서드-체이닝-지원","children":["$","a",null,{"href":"#메서드-체이닝-지원","children":"메서드 체이닝 지원"}]}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-typescript","children":"// 이전:\ntoolRegistry.register(tool1);\ntoolRegistry.register(tool2);\n\n// 개선:\ntoolRegistry\n  .register(tool1)\n  .register(tool2);\n"}]}],"\n",["$","h2",null,{"id":"성능-개선","children":["$","a",null,{"href":"#성능-개선","children":"성능 개선"}]}],"\n",["$","h3",null,{"id":"메모리-최적화","children":["$","a",null,{"href":"#메모리-최적화","children":"메모리 최적화"}]}],"\n",["$","p",null,{"children":"메모리 관리 시스템이 개선되어 대화 기록을 효율적으로 저장하고 검색할 수 있습니다:"}],"\n",["$","pre",null,{"children":["$","code",null,{"className":"language-typescript","children":"class SimpleMemory implements Memory {\n  private messages: Message[] = [];\n  private maxMessages: number;\n  \n  constructor(options?: { maxMessages?: number }) {\n    this.maxMessages = options?.maxMessages || 0;\n  }\n  \n  addMessage(message: Message): void {\n    this.messages.push(message);\n    \n    // 최대 메시지 수 제한 적용\n    if (this.maxMessages > 0 && this.messages.length > this.maxMessages) {\n      // 시스템 메시지는 항상 유지\n      const systemMessages = this.messages.filter(m => m.role === 'system');\n      const nonSystemMessages = this.messages.filter(m => m.role !== 'system');\n      \n      // 비시스템 메시지만 잘라냄\n      const remainingCount = this.maxMessages - systemMessages.length;\n      const trimmedNonSystemMessages = nonSystemMessages.slice(-remainingCount);\n      \n      // 시스템 메시지와 잘라낸 비시스템 메시지 합치기\n      this.messages = [...systemMessages, ...trimmedNonSystemMessages];\n    }\n  }\n}\n"}]}],"\n",["$","h2",null,{"id":"결론","children":["$","a",null,{"href":"#결론","children":"결론"}]}],"\n",["$","p",null,{"children":"이러한 코드 개선을 통해 Robota 라이브러리는 다음과 같은 이점을 제공합니다:"}],"\n",["$","ol",null,{"children":["\n",["$","li",null,{"children":[["$","strong",null,{"children":"더 나은 개발자 경험"}],": 직관적인 API와 명확한 문서화"]}],"\n",["$","li",null,{"children":[["$","strong",null,{"children":"향상된 타입 안전성"}],": 컴파일 타임에 오류 발견"]}],"\n",["$","li",null,{"children":[["$","strong",null,{"children":"더 높은 코드 품질"}],": 일관된 스타일과 설계 원칙"]}],"\n",["$","li",null,{"children":[["$","strong",null,{"children":"확장성"}],": 새로운 기능과 통합을 쉽게 추가할 수 있음"]}],"\n",["$","li",null,{"children":[["$","strong",null,{"children":"유지보수성"}],": 명확한 모듈 경계와 책임 분리"]}],"\n"]}],"\n",["$","p",null,{"children":"향후 개발 계획에는 추가 최적화, 더 많은 제공업체 지원, 그리고 고급 기능의 구현이 포함되어 있습니다."}]]]}]
9:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"code improvements - Robota"}],["$","meta","3",{"name":"description","content":"Robota 문서 및 API 참조"}]]
1:null
